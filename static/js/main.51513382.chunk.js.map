{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/ErrorBoundry.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","type","placeholder","onChange","searchChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","harError","error","info","this","setState","hasError","Component","App","onSearchChange","event","searchfield","target","value","console","log","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2CCSCQ,EAdF,SAACC,GACV,IAAOC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACI,sBAAKC,UAAY,kDAAjB,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,gCACI,6BAAKL,IACL,4BAAIC,IACJ,4BAAIC,WCQLI,EAfE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACf,OACI,8BAEAA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OAAO,cAAC,EAAD,CACCR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHPS,SCOXC,EAbG,SAACZ,GACf,OACI,qBAAKI,UAAU,MAAf,SACA,uBACIA,UAAU,mCACVS,KAAK,SACLC,YAAY,gBACZC,SAAYf,EAAMgB,kBCCfC,G,MARF,SAACjB,GACV,OACA,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACCrB,EAAMsB,aCgBIC,E,kDAlBX,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDwB,MAAQ,CACTC,UAAU,GAHA,E,qDAOtB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACC,UAAU,M,oBAGzB,WACI,OAAOF,KAAKJ,MAAMC,SAClB,yDACAG,KAAK5B,MAAMsB,a,GAfQS,aC2DZC,E,kDAnDX,aAAc,IAAD,8BACT,gBAeJC,eAAkB,SAACC,GACf,EAAKL,SAAS,CAACM,YAAaD,EAAME,OAAOC,SAfzC,EAAKb,MAAQ,CACThB,OAAQ,GACR2B,YAAa,IAEjBG,QAAQC,IAAI,eANH,E,qDASb,WAAoB,IAAD,OACfC,MAAM,8CAA8C/C,MAAK,SAAAgD,GACrD,OAAOA,EAASC,UACjBjD,MAAK,SAAAkD,GACJ,EAAKd,SAAS,CAACrB,OAAOmC,S,oBAQ9B,WACI,MAA8Bf,KAAKJ,MAA5BhB,EAAP,EAAOA,OAAQ2B,EAAf,EAAeA,YACTS,EAAiBpC,EAAOqC,QAAO,SAACrC,GAClC,OAAOA,EAAOP,KAAK6C,cAAcC,SAASZ,EAAYW,kBAE1D,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAgBY,KAAKK,iBACpC,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQoC,WAPlB,8C,GA5BMb,a,MCDlBkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.51513382.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) =>{\r\n    const {name, email, id} = props;\r\n    return(\r\n        <div className = 'tc bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                <p>{id}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n    return (\r\n        <div>\r\n        {\r\n        robots.map((user, i)=>{\r\n        return <Card key={i}\r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email} />\r\n    })\r\n        }\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = (props)=>{\r\n    return(\r\n        <div className='pa2'>\r\n        <input\r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange = {props.searchChange}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n    <div style={{overflowY: 'scroll', border: '5px solid black', height:'800px'}}>\r\n    {props.children}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            harError: false,\r\n        }\r\n    }\r\n     \r\ncomponentDidCatch(error, info){\r\n    this.setState({hasError: true})\r\n}\r\n\r\n    render(){\r\n        return this.state.harError?\r\n        <h1>Oppps that is not good.</h1>:\r\n        this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css'\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from './ErrorBoundry';\r\n// Parent components feed state into child, child receives the property and child can never that property\r\n// const state = ;\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n        console.log('constructor');\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n            return response.json();\r\n        }).then(users=>{\r\n            this.setState({robots:users})\r\n    })}\r\n\r\n    onSearchChange = ((event)=>{\r\n        this.setState({searchfield: event.target.value});\r\n        \r\n    })\r\n\r\n    render(){\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter((robots)=>{\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length?\r\n            <h1>Loading!</h1>:\r\n        (\r\n            <div className='tc'>\r\n            <h1 className='f2'>RoboFriends</h1>\r\n            <SearchBox searchChange = {this.onSearchChange} />\r\n        <Scroll>\r\n            <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n        </Scroll>\r\n            </div>\r\n        )\r\n        }\r\n} \r\n// const App = () =>{\r\n//     return (\r\n//         <div className='tc'>\r\n//         <h1>RoboFriends</h1>\r\n//         <SearchBox />\r\n//         <CardList robots={robots} />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './Containers/App'\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}